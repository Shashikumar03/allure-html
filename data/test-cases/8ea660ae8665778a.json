{"uid":"8ea660ae8665778a","name":"test_to_verify_time_taken_for_zaggle_digital_bulk_upload","fullName":"TestCases.gcBulk.test_zaggle_gc_digital_bulk_card_creation.TestZaggleGcDigitalBulkCardCreation#test_to_verify_time_taken_for_zaggle_digital_bulk_upload","historyId":"da2a7a4e705774e427795a32e0294416","time":{"start":1739366540336,"stop":1739366600632,"duration":60296},"description":"Verify the time taken to process the Zaggle digital gift card bulk upload. This test monitors the upload completion time and ensures the process completes successfully within the expected timeframe.","descriptionHtml":"<p>Verify the time taken to process the Zaggle digital gift card bulk upload. This test monitors the upload completion time and ensures the process completes successfully within the expected timeframe.</p>\n","status":"failed","statusMessage":"AssertionError: Bulk upload status is 'Failed'","statusTrace":"self = <TestCases.gcBulk.test_zaggle_gc_digital_bulk_card_creation.TestZaggleGcDigitalBulkCardCreation object at 0x104f080e0>\nnsdlObject = <constant.zaggle.zaggle_constant.Zaggle_constant object at 0x104b54da0>\n\n    @pytest.mark.zaggle_sanity_bulk\n    @allure.description(\"Verify the time taken to process the Zaggle digital gift card bulk upload. \"\n                        \"This test monitors the upload completion time and ensures the process completes successfully within the expected timeframe.\")\n    def test_to_verify_time_taken_for_zaggle_digital_bulk_upload(self, nsdlObject):\n>       DigitalGiftCardCreationInBulk.verify_time_taken_for_digital_gift_card_creation_in_bulk(\n            DigitalBulkUpload.DIGITAL_ENTRIES_QUANTITY, nsdlObject.DIGITAL_GC_BULK_UPLOAD_ID,\n            nsdlObject.ADMIN_LOGIN_TOKEN, count=1)\n\nTestCases/gcBulk/test_zaggle_gc_digital_bulk_card_creation.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nentries = 10, bulkUploadId = '250212132220370ID1BULK1762614', token = 't/DUUy9NEn9hygCu8vwXUwpT4Yv4+hpx56+39X3jJt8=', count = 1\n\n    @staticmethod\n    @allure.step(\"verify_time_taken_for_digital_gift_card_creation_in_bulk\")\n    def verify_time_taken_for_digital_gift_card_creation_in_bulk(entries, bulkUploadId, token, count):\n        with allure.step(f\"Step 1: Measure time taken for bulk upload of {entries} entries\"):\n            CommonMethod.timeTakenForBulkUpload(entries)\n    \n        with allure.step(f\"Step 2: Check Bulk Upload Details for ID: {bulkUploadId}\"):\n            response = BulkUploadDetails.get_bulk_upload_details(bulkUploadId, token)\n            data = response.json()\n            status = data.get(\"status\")\n    \n        if status.lower() == \"completed\":\n            allure.step(\"Bulk upload status is 'Completed'\")\n            assert True\n        elif status.lower() == \"failed\":\n            allure.step(\"Bulk upload status is 'Failed'\")\n>           assert False, \"Bulk upload status is 'Failed'\"\nE           AssertionError: Bulk upload status is 'Failed'\n\ntestCaseImplementation/gcBulk/digitalGc/DigitalCardCreationInBulk.py:52: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1739366315159,"stop":1739366315194,"duration":35},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"nsdlObject","time":{"start":1739366315196,"stop":1739366316520,"duration":1324},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"env_config","time":{"start":1739366315196,"stop":1739366315196,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"testStage":{"description":"Verify the time taken to process the Zaggle digital gift card bulk upload. This test monitors the upload completion time and ensures the process completes successfully within the expected timeframe.","status":"failed","statusMessage":"AssertionError: Bulk upload status is 'Failed'","statusTrace":"self = <TestCases.gcBulk.test_zaggle_gc_digital_bulk_card_creation.TestZaggleGcDigitalBulkCardCreation object at 0x104f080e0>\nnsdlObject = <constant.zaggle.zaggle_constant.Zaggle_constant object at 0x104b54da0>\n\n    @pytest.mark.zaggle_sanity_bulk\n    @allure.description(\"Verify the time taken to process the Zaggle digital gift card bulk upload. \"\n                        \"This test monitors the upload completion time and ensures the process completes successfully within the expected timeframe.\")\n    def test_to_verify_time_taken_for_zaggle_digital_bulk_upload(self, nsdlObject):\n>       DigitalGiftCardCreationInBulk.verify_time_taken_for_digital_gift_card_creation_in_bulk(\n            DigitalBulkUpload.DIGITAL_ENTRIES_QUANTITY, nsdlObject.DIGITAL_GC_BULK_UPLOAD_ID,\n            nsdlObject.ADMIN_LOGIN_TOKEN, count=1)\n\nTestCases/gcBulk/test_zaggle_gc_digital_bulk_card_creation.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nentries = 10, bulkUploadId = '250212132220370ID1BULK1762614', token = 't/DUUy9NEn9hygCu8vwXUwpT4Yv4+hpx56+39X3jJt8=', count = 1\n\n    @staticmethod\n    @allure.step(\"verify_time_taken_for_digital_gift_card_creation_in_bulk\")\n    def verify_time_taken_for_digital_gift_card_creation_in_bulk(entries, bulkUploadId, token, count):\n        with allure.step(f\"Step 1: Measure time taken for bulk upload of {entries} entries\"):\n            CommonMethod.timeTakenForBulkUpload(entries)\n    \n        with allure.step(f\"Step 2: Check Bulk Upload Details for ID: {bulkUploadId}\"):\n            response = BulkUploadDetails.get_bulk_upload_details(bulkUploadId, token)\n            data = response.json()\n            status = data.get(\"status\")\n    \n        if status.lower() == \"completed\":\n            allure.step(\"Bulk upload status is 'Completed'\")\n            assert True\n        elif status.lower() == \"failed\":\n            allure.step(\"Bulk upload status is 'Failed'\")\n>           assert False, \"Bulk upload status is 'Failed'\"\nE           AssertionError: Bulk upload status is 'Failed'\n\ntestCaseImplementation/gcBulk/digitalGc/DigitalCardCreationInBulk.py:52: AssertionError","steps":[{"name":"verify_time_taken_for_digital_gift_card_creation_in_bulk","time":{"start":1739366540336,"stop":1739366600607,"duration":60271},"status":"failed","statusMessage":"AssertionError: Bulk upload status is 'Failed'\n","statusTrace":"  File \"/Users/shashikushwaha/Documents/workspace/c91_api_automation_ppi/.venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/shashikushwaha/Documents/workspace/c91_api_automation_ppi/testCaseImplementation/gcBulk/digitalGc/DigitalCardCreationInBulk.py\", line 52, in verify_time_taken_for_digital_gift_card_creation_in_bulk\n    assert False, \"Bulk upload status is 'Failed'\"\n           ^^^^^\n","steps":[{"name":"Step 1: Measure time taken for bulk upload of 10 entries","time":{"start":1739366540336,"stop":1739366600339,"duration":60003},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"Step 2: Check Bulk Upload Details for ID: 250212132220370ID1BULK1762614","time":{"start":1739366600341,"stop":1739366600607,"duration":266},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"entries","value":"10"},{"name":"bulkUploadId","value":"'250212132220370ID1BULK1762614'"},{"name":"token","value":"'t/DUUy9NEn9hygCu8vwXUwpT4Yv4+hpx56+39X3jJt8='"},{"name":"count","value":"1"}],"stepsCount":2,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":3,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false},"afterStages":[],"labels":[{"name":"tag","value":"zaggle_sanity_bulk"},{"name":"parentSuite","value":"TestCases.gcBulk"},{"name":"suite","value":"test_zaggle_gc_digital_bulk_card_creation"},{"name":"subSuite","value":"TestZaggleGcDigitalBulkCardCreation"},{"name":"host","value":"shashikushwaha.local"},{"name":"thread","value":"77640-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestCases.gcBulk.test_zaggle_gc_digital_bulk_card_creation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["zaggle_sanity_bulk"]},"source":"8ea660ae8665778a.json","parameterValues":[]}
{"uid":"48d8fefe6ba5ca1b","name":"test_to_verify_successfully_uploaded_zaggle_digital_file","fullName":"TestCases.gcBulk.test_zaggle_gc_digital_bulk_card_creation.TestZaggleGcDigitalBulkCardCreation#test_to_verify_successfully_uploaded_zaggle_digital_file","historyId":"09b773f0b5a29fb0a9ef954a51ecdad1","time":{"start":1739366600706,"stop":1739366604273,"duration":3567},"description":"Verify the correctness of each field for the Zaggle digital gift cards created in bulk. This test validates the details of uploaded cards, checks the organization's balance before and after the upload, and ensures all records were successfully created as per the input data.","descriptionHtml":"<p>Verify the correctness of each field for the Zaggle digital gift cards created in bulk. This test validates the details of uploaded cards, checks the organization's balance before and after the upload, and ensures all records were successfully created as per the input data.</p>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <TestCases.gcBulk.test_zaggle_gc_digital_bulk_card_creation.TestZaggleGcDigitalBulkCardCreation object at 0x104f08260>\nnsdlObject = <constant.zaggle.zaggle_constant.Zaggle_constant object at 0x104b54da0>\n\n    @pytest.mark.zaggle_sanity_bulk\n    @allure.description(\"Verify the correctness of each field for the Zaggle digital gift cards created in bulk. \"\n                        \"This test validates the details of uploaded cards, checks the organization's balance before and after the upload, \"\n                        \"and ensures all records were successfully created as per the input data.\")\n    def test_to_verify_successfully_uploaded_zaggle_digital_file(self, nsdlObject):\n>       DigitalGiftCardCreationInBulk.verify_each_field_of_digital_created_card_in_bulk(\n            nsdlObject.DIGITAL_GC_BULK_UPLOAD_ID, nsdlObject.ADMIN_LOGIN_TOKEN,\n            nsdlObject.ORG_BALANCE_BEFORE_BULK_UPLOAD,\n            GetOrgBalance.getOrgBalance(nsdlObject.ADMIN_LOGIN_TOKEN, nsdlObject.ORG_ID))\n\nTestCases/gcBulk/test_zaggle_gc_digital_bulk_card_creation.py:180: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nbulkUploadId = '250212132220370ID1BULK1762614', bearer_token = 't/DUUy9NEn9hygCu8vwXUwpT4Yv4+hpx56+39X3jJt8=', org_balance_before_bulk_upload = '14942395.0000'\norg_balance_after_before_bulk_upload = '14942395.0000'\n\n    @staticmethod\n    @allure.step(\"verify_each_field_of_digital_created_card_in_bulk\")\n    def verify_each_field_of_digital_created_card_in_bulk(bulkUploadId, bearer_token, org_balance_before_bulk_upload,\n                                                          org_balance_after_before_bulk_upload):\n        with allure.step(f\"Step 1: Fetch Bulk Upload Details for ID: {bulkUploadId}\"):\n            response = BulkUploadDetails.get_bulk_upload_details(bulkUploadId, bearer_token)\n            data = response.json()\n            status = data.get(\"status\")\n            total_card_requests = data.get(\"totalCardsRequested\")\n            cards_created_successfully = data.get(\"cardsCreatedSuccessfully\")\n    \n        with allure.step(\n                \"Step 2: Verify bulk upload details like: status,total_card_created and total_card_created successfully\"):\n>           assert status.lower() == \"completed\"\nE           AssertionError\n\ntestCaseImplementation/gcBulk/digitalGc/DigitalCardCreationInBulk.py:77: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1739366315159,"stop":1739366315194,"duration":35},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"env_config","time":{"start":1739366315196,"stop":1739366315196,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"nsdlObject","time":{"start":1739366315196,"stop":1739366316520,"duration":1324},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"testStage":{"description":"Verify the correctness of each field for the Zaggle digital gift cards created in bulk. This test validates the details of uploaded cards, checks the organization's balance before and after the upload, and ensures all records were successfully created as per the input data.","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <TestCases.gcBulk.test_zaggle_gc_digital_bulk_card_creation.TestZaggleGcDigitalBulkCardCreation object at 0x104f08260>\nnsdlObject = <constant.zaggle.zaggle_constant.Zaggle_constant object at 0x104b54da0>\n\n    @pytest.mark.zaggle_sanity_bulk\n    @allure.description(\"Verify the correctness of each field for the Zaggle digital gift cards created in bulk. \"\n                        \"This test validates the details of uploaded cards, checks the organization's balance before and after the upload, \"\n                        \"and ensures all records were successfully created as per the input data.\")\n    def test_to_verify_successfully_uploaded_zaggle_digital_file(self, nsdlObject):\n>       DigitalGiftCardCreationInBulk.verify_each_field_of_digital_created_card_in_bulk(\n            nsdlObject.DIGITAL_GC_BULK_UPLOAD_ID, nsdlObject.ADMIN_LOGIN_TOKEN,\n            nsdlObject.ORG_BALANCE_BEFORE_BULK_UPLOAD,\n            GetOrgBalance.getOrgBalance(nsdlObject.ADMIN_LOGIN_TOKEN, nsdlObject.ORG_ID))\n\nTestCases/gcBulk/test_zaggle_gc_digital_bulk_card_creation.py:180: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nbulkUploadId = '250212132220370ID1BULK1762614', bearer_token = 't/DUUy9NEn9hygCu8vwXUwpT4Yv4+hpx56+39X3jJt8=', org_balance_before_bulk_upload = '14942395.0000'\norg_balance_after_before_bulk_upload = '14942395.0000'\n\n    @staticmethod\n    @allure.step(\"verify_each_field_of_digital_created_card_in_bulk\")\n    def verify_each_field_of_digital_created_card_in_bulk(bulkUploadId, bearer_token, org_balance_before_bulk_upload,\n                                                          org_balance_after_before_bulk_upload):\n        with allure.step(f\"Step 1: Fetch Bulk Upload Details for ID: {bulkUploadId}\"):\n            response = BulkUploadDetails.get_bulk_upload_details(bulkUploadId, bearer_token)\n            data = response.json()\n            status = data.get(\"status\")\n            total_card_requests = data.get(\"totalCardsRequested\")\n            cards_created_successfully = data.get(\"cardsCreatedSuccessfully\")\n    \n        with allure.step(\n                \"Step 2: Verify bulk upload details like: status,total_card_created and total_card_created successfully\"):\n>           assert status.lower() == \"completed\"\nE           AssertionError\n\ntestCaseImplementation/gcBulk/digitalGc/DigitalCardCreationInBulk.py:77: AssertionError","steps":[{"name":"verify_each_field_of_digital_created_card_in_bulk","time":{"start":1739366603984,"stop":1739366604273,"duration":289},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"/Users/shashikushwaha/Documents/workspace/c91_api_automation_ppi/.venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/shashikushwaha/Documents/workspace/c91_api_automation_ppi/testCaseImplementation/gcBulk/digitalGc/DigitalCardCreationInBulk.py\", line 77, in verify_each_field_of_digital_created_card_in_bulk\n    assert status.lower() == \"completed\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[{"name":"Step 1: Fetch Bulk Upload Details for ID: 250212132220370ID1BULK1762614","time":{"start":1739366603984,"stop":1739366604271,"duration":287},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"Step 2: Verify bulk upload details like: status,total_card_created and total_card_created successfully","time":{"start":1739366604272,"stop":1739366604272,"duration":0},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"/Users/shashikushwaha/Documents/workspace/c91_api_automation_ppi/testCaseImplementation/gcBulk/digitalGc/DigitalCardCreationInBulk.py\", line 77, in verify_each_field_of_digital_created_card_in_bulk\n    assert status.lower() == \"completed\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"bulkUploadId","value":"'250212132220370ID1BULK1762614'"},{"name":"bearer_token","value":"'t/DUUy9NEn9hygCu8vwXUwpT4Yv4+hpx56+39X3jJt8='"},{"name":"org_balance_before_bulk_upload","value":"'14942395.0000'"},{"name":"org_balance_after_before_bulk_upload","value":"'14942395.0000'"}],"stepsCount":2,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"attachments":[{"uid":"901168a02c41f7ed","name":"log","source":"901168a02c41f7ed.txt","type":"text/plain","size":1864}],"parameters":[],"stepsCount":3,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false},"afterStages":[],"labels":[{"name":"tag","value":"zaggle_sanity_bulk"},{"name":"parentSuite","value":"TestCases.gcBulk"},{"name":"suite","value":"test_zaggle_gc_digital_bulk_card_creation"},{"name":"subSuite","value":"TestZaggleGcDigitalBulkCardCreation"},{"name":"host","value":"shashikushwaha.local"},{"name":"thread","value":"77640-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestCases.gcBulk.test_zaggle_gc_digital_bulk_card_creation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["zaggle_sanity_bulk"]},"source":"48d8fefe6ba5ca1b.json","parameterValues":[]}
{"uid":"32e59c1bd073933e","name":"test_to_verify_each_field_of_successfully_created_zaggle_digital_gift_card_in_bulk","fullName":"TestCases.gcBulk.test_zaggle_gc_digital_bulk_card_creation.TestZaggleGcDigitalBulkCardCreation#test_to_verify_each_field_of_successfully_created_zaggle_digital_gift_card_in_bulk","historyId":"bee7ff69d0e518998f2fd1fe7c623337","time":{"start":1739366604306,"stop":1739366604545,"duration":239},"description":"test_to_verify_each_field_of_successfully_created_zaggle_digital_gift_card_in_bulk","descriptionHtml":"<p>test_to_verify_each_field_of_successfully_created_zaggle_digital_gift_card_in_bulk</p>\n","status":"failed","statusMessage":"AssertionError: Mismatch in total records. Expected: 10, Got: 0","statusTrace":"self = <TestCases.gcBulk.test_zaggle_gc_digital_bulk_card_creation.TestZaggleGcDigitalBulkCardCreation object at 0x104f083e0>\nnsdlObject = <constant.zaggle.zaggle_constant.Zaggle_constant object at 0x104b54da0>\n\n    @pytest.mark.zaggle_sanity_bulk\n    @allure.description(\"test_to_verify_each_field_of_successfully_created_zaggle_digital_gift_card_in_bulk\")\n    def test_to_verify_each_field_of_successfully_created_zaggle_digital_gift_card_in_bulk(self, nsdlObject):\n>       DigitalGiftCardCreationInBulk.verify_each_details_of_successfully_created_digital_gift_card_by_bulk_upload(\n            nsdlObject.DIGITAL_GC_BULK_UPLOAD_ID, nsdlObject.ADMIN_LOGIN_TOKEN)\n\nTestCases/gcBulk/test_zaggle_gc_digital_bulk_card_creation.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nbulk_upload_id = '250212132220370ID1BULK1762614', token = 't/DUUy9NEn9hygCu8vwXUwpT4Yv4+hpx56+39X3jJt8='\n\n    @staticmethod\n    @allure.step(\"Verify each detail of successfully created digital gift cards by bulk upload\")\n    def verify_each_details_of_successfully_created_digital_gift_card_by_bulk_upload(bulk_upload_id, token):\n        with allure.step(f\"Fetch bulk upload records for Bulk ID: {bulk_upload_id}\"):\n            response = BulkUploadRecordsFetcher.fetch_bulk_upload_records(bulk_upload_id, token)\n            assert response is not None, \"Failed to fetch bulk upload records.\"\n            # print(response.json().get(\"bulkDetailedUploadCardsRecordPojo\"))\n        with allure.step(\"Extract the details from the response\"):\n            arrOfFile = response.json().get(\"bulkDetailedUploadCardsRecordPojo\")\n            assert arrOfFile is not None, \"No records found in the response.\"\n    \n        with allure.step(\"Verify total records match the expected quantity\"):\n            total_records = response.json().get(\"totalRecords\")\n            allure.attach(str(total_records), \"Total Records in Response\")\n>           assert float(total_records) == float(DigitalBulkUpload.DIGITAL_ENTRIES_QUANTITY), (\n                f\"Mismatch in total records. Expected: {DigitalBulkUpload.DIGITAL_ENTRIES_QUANTITY}, Got: {total_records}\"\n            )\nE           AssertionError: Mismatch in total records. Expected: 10, Got: 0\n\ntestCaseImplementation/gcBulk/digitalGc/DigitalCardCreationInBulk.py:126: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1739366315159,"stop":1739366315194,"duration":35},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"nsdlObject","time":{"start":1739366315196,"stop":1739366316520,"duration":1324},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"env_config","time":{"start":1739366315196,"stop":1739366315196,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"testStage":{"description":"test_to_verify_each_field_of_successfully_created_zaggle_digital_gift_card_in_bulk","status":"failed","statusMessage":"AssertionError: Mismatch in total records. Expected: 10, Got: 0","statusTrace":"self = <TestCases.gcBulk.test_zaggle_gc_digital_bulk_card_creation.TestZaggleGcDigitalBulkCardCreation object at 0x104f083e0>\nnsdlObject = <constant.zaggle.zaggle_constant.Zaggle_constant object at 0x104b54da0>\n\n    @pytest.mark.zaggle_sanity_bulk\n    @allure.description(\"test_to_verify_each_field_of_successfully_created_zaggle_digital_gift_card_in_bulk\")\n    def test_to_verify_each_field_of_successfully_created_zaggle_digital_gift_card_in_bulk(self, nsdlObject):\n>       DigitalGiftCardCreationInBulk.verify_each_details_of_successfully_created_digital_gift_card_by_bulk_upload(\n            nsdlObject.DIGITAL_GC_BULK_UPLOAD_ID, nsdlObject.ADMIN_LOGIN_TOKEN)\n\nTestCases/gcBulk/test_zaggle_gc_digital_bulk_card_creation.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nbulk_upload_id = '250212132220370ID1BULK1762614', token = 't/DUUy9NEn9hygCu8vwXUwpT4Yv4+hpx56+39X3jJt8='\n\n    @staticmethod\n    @allure.step(\"Verify each detail of successfully created digital gift cards by bulk upload\")\n    def verify_each_details_of_successfully_created_digital_gift_card_by_bulk_upload(bulk_upload_id, token):\n        with allure.step(f\"Fetch bulk upload records for Bulk ID: {bulk_upload_id}\"):\n            response = BulkUploadRecordsFetcher.fetch_bulk_upload_records(bulk_upload_id, token)\n            assert response is not None, \"Failed to fetch bulk upload records.\"\n            # print(response.json().get(\"bulkDetailedUploadCardsRecordPojo\"))\n        with allure.step(\"Extract the details from the response\"):\n            arrOfFile = response.json().get(\"bulkDetailedUploadCardsRecordPojo\")\n            assert arrOfFile is not None, \"No records found in the response.\"\n    \n        with allure.step(\"Verify total records match the expected quantity\"):\n            total_records = response.json().get(\"totalRecords\")\n            allure.attach(str(total_records), \"Total Records in Response\")\n>           assert float(total_records) == float(DigitalBulkUpload.DIGITAL_ENTRIES_QUANTITY), (\n                f\"Mismatch in total records. Expected: {DigitalBulkUpload.DIGITAL_ENTRIES_QUANTITY}, Got: {total_records}\"\n            )\nE           AssertionError: Mismatch in total records. Expected: 10, Got: 0\n\ntestCaseImplementation/gcBulk/digitalGc/DigitalCardCreationInBulk.py:126: AssertionError","steps":[{"name":"Verify each detail of successfully created digital gift cards by bulk upload","time":{"start":1739366604306,"stop":1739366604545,"duration":239},"status":"failed","statusMessage":"AssertionError: Mismatch in total records. Expected: 10, Got: 0\n","statusTrace":"  File \"/Users/shashikushwaha/Documents/workspace/c91_api_automation_ppi/.venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/shashikushwaha/Documents/workspace/c91_api_automation_ppi/testCaseImplementation/gcBulk/digitalGc/DigitalCardCreationInBulk.py\", line 126, in verify_each_details_of_successfully_created_digital_gift_card_by_bulk_upload\n    assert float(total_records) == float(DigitalBulkUpload.DIGITAL_ENTRIES_QUANTITY), (\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[{"name":"Fetch bulk upload records for Bulk ID: 250212132220370ID1BULK1762614","time":{"start":1739366604306,"stop":1739366604541,"duration":235},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"Extract the details from the response","time":{"start":1739366604541,"stop":1739366604541,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"Verify total records match the expected quantity","time":{"start":1739366604541,"stop":1739366604544,"duration":3},"status":"failed","statusMessage":"AssertionError: Mismatch in total records. Expected: 10, Got: 0\n","statusTrace":"  File \"/Users/shashikushwaha/Documents/workspace/c91_api_automation_ppi/testCaseImplementation/gcBulk/digitalGc/DigitalCardCreationInBulk.py\", line 126, in verify_each_details_of_successfully_created_digital_gift_card_by_bulk_upload\n    assert float(total_records) == float(DigitalBulkUpload.DIGITAL_ENTRIES_QUANTITY), (\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[{"uid":"1b0402025a7a13de","name":"Total Records in Response","source":"1b0402025a7a13de.attach","type":"text/plain","size":1}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"bulk_upload_id","value":"'250212132220370ID1BULK1762614'"},{"name":"token","value":"'t/DUUy9NEn9hygCu8vwXUwpT4Yv4+hpx56+39X3jJt8='"}],"stepsCount":3,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":4,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false},"afterStages":[],"labels":[{"name":"tag","value":"zaggle_sanity_bulk"},{"name":"parentSuite","value":"TestCases.gcBulk"},{"name":"suite","value":"test_zaggle_gc_digital_bulk_card_creation"},{"name":"subSuite","value":"TestZaggleGcDigitalBulkCardCreation"},{"name":"host","value":"shashikushwaha.local"},{"name":"thread","value":"77640-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestCases.gcBulk.test_zaggle_gc_digital_bulk_card_creation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["zaggle_sanity_bulk"]},"source":"32e59c1bd073933e.json","parameterValues":[]}
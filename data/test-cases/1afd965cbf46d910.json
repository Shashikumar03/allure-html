{"uid":"1afd965cbf46d910","name":"test_to_verify_negative_load_amount","fullName":"TestCases.gcBulk.test_fino_personalised_bulk_gc_card_creation.TestFinoPersonalisedBulkGiftCardCreation#test_to_verify_negative_load_amount","historyId":"6f1ec4d498de75c844fe0fcea7fe5a62","time":{"start":1738695599333,"stop":1738695660051,"duration":60718},"description":"Upload a personalised csv file with negative amount","descriptionHtml":"<p>Upload a personalised csv file with negative amount</p>\n","status":"broken","statusMessage":"TypeError: unsupported callable","statusTrace":"func = <staticmethod(<function PersonalisedCardCreationInBulk.verify_failed_bulk_card_creation at 0x102a92e80>)>\n\n    def getfullargspec(func):\n        \"\"\"Get the names and default values of a callable object's parameters.\n    \n        A tuple of seven things is returned:\n        (args, varargs, varkw, defaults, kwonlyargs, kwonlydefaults, annotations).\n        'args' is a list of the parameter names.\n        'varargs' and 'varkw' are the names of the * and ** parameters or None.\n        'defaults' is an n-tuple of the default values of the last n parameters.\n        'kwonlyargs' is a list of keyword-only parameter names.\n        'kwonlydefaults' is a dictionary mapping names from kwonlyargs to defaults.\n        'annotations' is a dictionary mapping parameter names to annotations.\n    \n        Notable differences from inspect.signature():\n          - the \"self\" parameter is always reported, even for bound methods\n          - wrapper chains defined by __wrapped__ *not* unwrapped automatically\n        \"\"\"\n        try:\n            # Re: `skip_bound_arg=False`\n            #\n            # There is a notable difference in behaviour between getfullargspec\n            # and Signature: the former always returns 'self' parameter for bound\n            # methods, whereas the Signature always shows the actual calling\n            # signature of the passed object.\n            #\n            # To simulate this behaviour, we \"unbind\" bound methods, to trick\n            # inspect.signature to always return their first parameter (\"self\",\n            # usually)\n    \n            # Re: `follow_wrapper_chains=False`\n            #\n            # getfullargspec() historically ignored __wrapped__ attributes,\n            # so we ensure that remains the case in 3.3+\n    \n>           sig = _signature_from_callable(func,\n                                           follow_wrapper_chains=False,\n                                           skip_bound_arg=False,\n                                           sigcls=Signature,\n                                           eval_str=False)\n\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/inspect.py:1384: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/inspect.py:2571: in _signature_from_callable\n    return _signature_from_builtin(sigcls, obj,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'inspect.Signature'>, func = <staticmethod(<function PersonalisedCardCreationInBulk.verify_failed_bulk_card_creation at 0x102a92e80>)>\nskip_bound_arg = False\n\n    def _signature_from_builtin(cls, func, skip_bound_arg=True):\n        \"\"\"Private helper function to get signature for\n        builtin callables.\n        \"\"\"\n    \n        if not _signature_is_builtin(func):\n            raise TypeError(\"{!r} is not a Python builtin \"\n                            \"function\".format(func))\n    \n        s = getattr(func, \"__text_signature__\", None)\n        if not s:\n>           raise ValueError(\"no signature found for builtin {!r}\".format(func))\nE           ValueError: no signature found for builtin <staticmethod(<function PersonalisedCardCreationInBulk.verify_failed_bulk_card_creation at 0x102a92e80>)>\n\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/inspect.py:2361: ValueError\n\nThe above exception was the direct cause of the following exception:\n\nself = <TestCases.gcBulk.test_fino_personalised_bulk_gc_card_creation.TestFinoPersonalisedBulkGiftCardCreation object at 0x102b0b770>\nfinoObject = <constant.fino.fino_constant.FinoConstant object at 0x102cd92e0>\n\n    @allure.description(\"Upload a personalised csv file with negative amount\")\n    def test_to_verify_negative_load_amount(self, finoObject):\n>       PersonalisedCardCreationInBulk.verify_personalised_card_creation_in_bulk_with_negative_amount(finoObject.FINO_GC_CARD_PROGRAM_ID,\"fino_per_negative_amount\", PersonalisedBulkUpload.PERSONALISED_ENTRIES_QUANTITY, finoObject.ADMIN_LOGIN_TOKEN)\n\nTestCases/gcBulk/test_fino_personalised_bulk_gc_card_creation.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/gcBulk/personalised/PersonalisedCardCreationInBulk.py:422: in verify_personalised_card_creation_in_bulk_with_negative_amount\n    PersonalisedCardCreationInBulk.verify_failed_bulk_card_creation(response, records, token)\n.venv/lib/python3.12/site-packages/allure_commons/utils.py:231: in func_parameters\n    arg_spec = inspect.getfullargspec(func)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfunc = <staticmethod(<function PersonalisedCardCreationInBulk.verify_failed_bulk_card_creation at 0x102a92e80>)>\n\n    def getfullargspec(func):\n        \"\"\"Get the names and default values of a callable object's parameters.\n    \n        A tuple of seven things is returned:\n        (args, varargs, varkw, defaults, kwonlyargs, kwonlydefaults, annotations).\n        'args' is a list of the parameter names.\n        'varargs' and 'varkw' are the names of the * and ** parameters or None.\n        'defaults' is an n-tuple of the default values of the last n parameters.\n        'kwonlyargs' is a list of keyword-only parameter names.\n        'kwonlydefaults' is a dictionary mapping names from kwonlyargs to defaults.\n        'annotations' is a dictionary mapping parameter names to annotations.\n    \n        Notable differences from inspect.signature():\n          - the \"self\" parameter is always reported, even for bound methods\n          - wrapper chains defined by __wrapped__ *not* unwrapped automatically\n        \"\"\"\n        try:\n            # Re: `skip_bound_arg=False`\n            #\n            # There is a notable difference in behaviour between getfullargspec\n            # and Signature: the former always returns 'self' parameter for bound\n            # methods, whereas the Signature always shows the actual calling\n            # signature of the passed object.\n            #\n            # To simulate this behaviour, we \"unbind\" bound methods, to trick\n            # inspect.signature to always return their first parameter (\"self\",\n            # usually)\n    \n            # Re: `follow_wrapper_chains=False`\n            #\n            # getfullargspec() historically ignored __wrapped__ attributes,\n            # so we ensure that remains the case in 3.3+\n    \n            sig = _signature_from_callable(func,\n                                           follow_wrapper_chains=False,\n                                           skip_bound_arg=False,\n                                           sigcls=Signature,\n                                           eval_str=False)\n        except Exception as ex:\n            # Most of the times 'signature' will raise ValueError.\n            # But, it can also raise AttributeError, and, maybe something\n            # else. So to be fully backwards compatible, we catch all\n            # possible exceptions here, and reraise a TypeError.\n>           raise TypeError('unsupported callable') from ex\nE           TypeError: unsupported callable\n\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/inspect.py:1394: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1738691690677,"stop":1738691690705,"duration":28},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"env_config","time":{"start":1738691690718,"stop":1738691690718,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"finoObject","time":{"start":1738694997256,"stop":1738694998053,"duration":797},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"testStage":{"description":"Upload a personalised csv file with negative amount","status":"broken","statusMessage":"TypeError: unsupported callable","statusTrace":"func = <staticmethod(<function PersonalisedCardCreationInBulk.verify_failed_bulk_card_creation at 0x102a92e80>)>\n\n    def getfullargspec(func):\n        \"\"\"Get the names and default values of a callable object's parameters.\n    \n        A tuple of seven things is returned:\n        (args, varargs, varkw, defaults, kwonlyargs, kwonlydefaults, annotations).\n        'args' is a list of the parameter names.\n        'varargs' and 'varkw' are the names of the * and ** parameters or None.\n        'defaults' is an n-tuple of the default values of the last n parameters.\n        'kwonlyargs' is a list of keyword-only parameter names.\n        'kwonlydefaults' is a dictionary mapping names from kwonlyargs to defaults.\n        'annotations' is a dictionary mapping parameter names to annotations.\n    \n        Notable differences from inspect.signature():\n          - the \"self\" parameter is always reported, even for bound methods\n          - wrapper chains defined by __wrapped__ *not* unwrapped automatically\n        \"\"\"\n        try:\n            # Re: `skip_bound_arg=False`\n            #\n            # There is a notable difference in behaviour between getfullargspec\n            # and Signature: the former always returns 'self' parameter for bound\n            # methods, whereas the Signature always shows the actual calling\n            # signature of the passed object.\n            #\n            # To simulate this behaviour, we \"unbind\" bound methods, to trick\n            # inspect.signature to always return their first parameter (\"self\",\n            # usually)\n    \n            # Re: `follow_wrapper_chains=False`\n            #\n            # getfullargspec() historically ignored __wrapped__ attributes,\n            # so we ensure that remains the case in 3.3+\n    \n>           sig = _signature_from_callable(func,\n                                           follow_wrapper_chains=False,\n                                           skip_bound_arg=False,\n                                           sigcls=Signature,\n                                           eval_str=False)\n\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/inspect.py:1384: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/inspect.py:2571: in _signature_from_callable\n    return _signature_from_builtin(sigcls, obj,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'inspect.Signature'>, func = <staticmethod(<function PersonalisedCardCreationInBulk.verify_failed_bulk_card_creation at 0x102a92e80>)>\nskip_bound_arg = False\n\n    def _signature_from_builtin(cls, func, skip_bound_arg=True):\n        \"\"\"Private helper function to get signature for\n        builtin callables.\n        \"\"\"\n    \n        if not _signature_is_builtin(func):\n            raise TypeError(\"{!r} is not a Python builtin \"\n                            \"function\".format(func))\n    \n        s = getattr(func, \"__text_signature__\", None)\n        if not s:\n>           raise ValueError(\"no signature found for builtin {!r}\".format(func))\nE           ValueError: no signature found for builtin <staticmethod(<function PersonalisedCardCreationInBulk.verify_failed_bulk_card_creation at 0x102a92e80>)>\n\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/inspect.py:2361: ValueError\n\nThe above exception was the direct cause of the following exception:\n\nself = <TestCases.gcBulk.test_fino_personalised_bulk_gc_card_creation.TestFinoPersonalisedBulkGiftCardCreation object at 0x102b0b770>\nfinoObject = <constant.fino.fino_constant.FinoConstant object at 0x102cd92e0>\n\n    @allure.description(\"Upload a personalised csv file with negative amount\")\n    def test_to_verify_negative_load_amount(self, finoObject):\n>       PersonalisedCardCreationInBulk.verify_personalised_card_creation_in_bulk_with_negative_amount(finoObject.FINO_GC_CARD_PROGRAM_ID,\"fino_per_negative_amount\", PersonalisedBulkUpload.PERSONALISED_ENTRIES_QUANTITY, finoObject.ADMIN_LOGIN_TOKEN)\n\nTestCases/gcBulk/test_fino_personalised_bulk_gc_card_creation.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/gcBulk/personalised/PersonalisedCardCreationInBulk.py:422: in verify_personalised_card_creation_in_bulk_with_negative_amount\n    PersonalisedCardCreationInBulk.verify_failed_bulk_card_creation(response, records, token)\n.venv/lib/python3.12/site-packages/allure_commons/utils.py:231: in func_parameters\n    arg_spec = inspect.getfullargspec(func)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfunc = <staticmethod(<function PersonalisedCardCreationInBulk.verify_failed_bulk_card_creation at 0x102a92e80>)>\n\n    def getfullargspec(func):\n        \"\"\"Get the names and default values of a callable object's parameters.\n    \n        A tuple of seven things is returned:\n        (args, varargs, varkw, defaults, kwonlyargs, kwonlydefaults, annotations).\n        'args' is a list of the parameter names.\n        'varargs' and 'varkw' are the names of the * and ** parameters or None.\n        'defaults' is an n-tuple of the default values of the last n parameters.\n        'kwonlyargs' is a list of keyword-only parameter names.\n        'kwonlydefaults' is a dictionary mapping names from kwonlyargs to defaults.\n        'annotations' is a dictionary mapping parameter names to annotations.\n    \n        Notable differences from inspect.signature():\n          - the \"self\" parameter is always reported, even for bound methods\n          - wrapper chains defined by __wrapped__ *not* unwrapped automatically\n        \"\"\"\n        try:\n            # Re: `skip_bound_arg=False`\n            #\n            # There is a notable difference in behaviour between getfullargspec\n            # and Signature: the former always returns 'self' parameter for bound\n            # methods, whereas the Signature always shows the actual calling\n            # signature of the passed object.\n            #\n            # To simulate this behaviour, we \"unbind\" bound methods, to trick\n            # inspect.signature to always return their first parameter (\"self\",\n            # usually)\n    \n            # Re: `follow_wrapper_chains=False`\n            #\n            # getfullargspec() historically ignored __wrapped__ attributes,\n            # so we ensure that remains the case in 3.3+\n    \n            sig = _signature_from_callable(func,\n                                           follow_wrapper_chains=False,\n                                           skip_bound_arg=False,\n                                           sigcls=Signature,\n                                           eval_str=False)\n        except Exception as ex:\n            # Most of the times 'signature' will raise ValueError.\n            # But, it can also raise AttributeError, and, maybe something\n            # else. So to be fully backwards compatible, we catch all\n            # possible exceptions here, and reraise a TypeError.\n>           raise TypeError('unsupported callable') from ex\nE           TypeError: unsupported callable\n\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/inspect.py:1394: TypeError","steps":[{"name":"creating a personalised gc csv file with negative amount ","time":{"start":1738695599334,"stop":1738695660050,"duration":60716},"status":"broken","statusMessage":"TypeError: unsupported callable\n","statusTrace":"  File \"/Users/shashikushwaha/Documents/workspace/c91_api_automation_ppi/.venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/shashikushwaha/Documents/workspace/c91_api_automation_ppi/pages/gcBulk/personalised/PersonalisedCardCreationInBulk.py\", line 422, in verify_personalised_card_creation_in_bulk_with_negative_amount\n    PersonalisedCardCreationInBulk.verify_failed_bulk_card_creation(response, records, token)\n  File \"/Users/shashikushwaha/Documents/workspace/c91_api_automation_ppi/.venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 189, in impl\n    params = func_parameters(func, *a, **kw)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/shashikushwaha/Documents/workspace/c91_api_automation_ppi/.venv/lib/python3.12/site-packages/allure_commons/utils.py\", line 231, in func_parameters\n    arg_spec = inspect.getfullargspec(func)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/inspect.py\", line 1394, in getfullargspec\n    raise TypeError('unsupported callable') from ex\n","steps":[{"name":"Fetching card program details for cpId: 250204142857543ID1CP0817422","time":{"start":1738695599334,"stop":1738695599508,"duration":174},"status":"passed","steps":[],"attachments":[{"uid":"a014671756668a6b","name":"Card Program Details","source":"a014671756668a6b.json","type":"application/json","size":1323}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false},{"name":"Extracting organization ID from card program details","time":{"start":1738695599508,"stop":1738695599510,"duration":2},"status":"passed","steps":[],"attachments":[{"uid":"eb9d2222c7d15824","name":"Organization ID","source":"eb9d2222c7d15824.attach","type":"text/plain","size":28}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false},{"name":"Creating personalized card file with 10 records and filename: fino_per_negative_amount  and a negative amount of -101","time":{"start":1738695599510,"stop":1738695599604,"duration":94},"status":"passed","steps":[],"attachments":[{"uid":"4a55271fd67f4f52","name":"Personalized Card Creation File","source":"4a55271fd67f4f52.txt","type":"text/plain","size":156}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false},{"name":"Submitting payload for personalized gift card creation","time":{"start":1738695599604,"stop":1738695599849,"duration":245},"status":"passed","steps":[],"attachments":[{"uid":"3ee1bde836dca9d7","name":"Payload Submission Response","source":"3ee1bde836dca9d7.json","type":"application/json","size":110}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false},{"name":" wait for some time for the processing of uploaded files","time":{"start":1738695599849,"stop":1738695660044,"duration":60195},"status":"passed","steps":[{"name":"Verify time taken for successfully personalized gift card creation in bulk","time":{"start":1738695599850,"stop":1738695660044,"duration":60194},"status":"passed","steps":[{"name":"Step 1: Measure time taken for bulk upload of 10 entries","time":{"start":1738695599850,"stop":1738695659859,"duration":60009},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"Step 2: Check Bulk Upload Details for ID: 250204185959855ID1BULK7142248","time":{"start":1738695659860,"stop":1738695660042,"duration":182},"status":"passed","steps":[],"attachments":[{"uid":"69d50b9c62f27bc0","name":"Bulk Upload Details","source":"69d50b9c62f27bc0.json","type":"application/json","size":1111}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"entries","value":"10"},{"name":"bulkUploadId","value":"'250204185959855ID1BULK7142248'"},{"name":"token","value":"'rYkNz0AQn4nyMMjDGw33T9pliEE5I7tmfKnow5L2bJ8='"},{"name":"count","value":"1"}],"stepsCount":2,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":3,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false},{"name":"verify the failed failed","time":{"start":1738695660044,"stop":1738695660045,"duration":1},"status":"broken","statusMessage":"TypeError: unsupported callable\n","statusTrace":"  File \"/Users/shashikushwaha/Documents/workspace/c91_api_automation_ppi/pages/gcBulk/personalised/PersonalisedCardCreationInBulk.py\", line 422, in verify_personalised_card_creation_in_bulk_with_negative_amount\n    PersonalisedCardCreationInBulk.verify_failed_bulk_card_creation(response, records, token)\n  File \"/Users/shashikushwaha/Documents/workspace/c91_api_automation_ppi/.venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 189, in impl\n    params = func_parameters(func, *a, **kw)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/shashikushwaha/Documents/workspace/c91_api_automation_ppi/.venv/lib/python3.12/site-packages/allure_commons/utils.py\", line 231, in func_parameters\n    arg_spec = inspect.getfullargspec(func)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/inspect.py\", line 1394, in getfullargspec\n    raise TypeError('unsupported callable') from ex\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"cpId","value":"'250204142857543ID1CP0817422'"},{"name":"filename","value":"'fino_per_negative_amount'"},{"name":"records","value":"10"},{"name":"token","value":"'rYkNz0AQn4nyMMjDGw33T9pliEE5I7tmfKnow5L2bJ8='"},{"name":"amount","value":"-101"}],"stepsCount":9,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":5,"attachmentStep":false}],"attachments":[{"uid":"42225aa084631e5f","name":"log","source":"42225aa084631e5f.txt","type":"text/plain","size":174}],"parameters":[],"stepsCount":10,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":6,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"TestCases.gcBulk"},{"name":"suite","value":"test_fino_personalised_bulk_gc_card_creation"},{"name":"subSuite","value":"TestFinoPersonalisedBulkGiftCardCreation"},{"name":"host","value":"MacBookAir.bbrouter"},{"name":"thread","value":"49510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestCases.gcBulk.test_fino_personalised_bulk_gc_card_creation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"1afd965cbf46d910.json","parameterValues":[]}
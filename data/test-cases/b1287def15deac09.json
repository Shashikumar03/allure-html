{"uid":"b1287def15deac09","name":"test_verify_pos_ecom_and_cl_txn_count","fullName":"TestCases.indianBank.test_indianBank_ECOM_POS_CL_min_kyc_txn_limit.TestIndianBankEcomMinKycLimit#test_verify_pos_ecom_and_cl_txn_count","historyId":"73a4649dcd9a6902f68fb9239e597789","time":{"start":1735649858465,"stop":1735650223621,"duration":365156},"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <TestCases.indianBank.test_indianBank_ECOM_POS_CL_min_kyc_txn_limit.TestIndianBankEcomMinKycLimit object at 0x1100c90d0>\nindianBankObject = <constant.indianBank.IndianBankConstant.IndianBankConstant object at 0x106856240>\nissuer_login_token = 'PjrGg43vFOYWRDJ1pvxaVtJW8cHw3spQCQLPHeevdXc='\n\n    def test_verify_pos_ecom_and_cl_txn_count(self,indianBankObject,issuer_login_token):\n>       PosEcomAndCLMinKyc.verifyPosEcomAndClTransactionCount(indianBankObject.PERSONAL_CARD_MOBILE_NO, issuer_login_token)\n\nTestCases/indianBank/test_indianBank_ECOM_POS_CL_min_kyc_txn_limit.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/kyclimit/indianBankKycLimit/PosEcomAndCLMinKyc.py:195: in verifyPosEcomAndClTransactionCount\n    DemoTxnPostMethod.demo_txn_post_method(mobile, 1, \"CL\", jwt_token, cardId)\npages/demoTxn/demoTxn.py:16: in demo_txn_post_method\n    prevTable = TransferMoneyPostMethod.checkBalance(cardId,jwt_token)\npages/impsTransfer/ImpsMoneyTransfer.py:73: in checkBalance\n    response = GetCardDetailsGetMethod.get_card_details_get_method(cardId, admin_login_token)\npages/helperPage/Card/GetCardDetails.py:11: in get_card_details_get_method\n    return GetCardDetailsPayload.get_card_details_payload(jwt_login_token, cardId)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nadmin_token = 'PjrGg43vFOYWRDJ1pvxaVtJW8cHw3spQCQLPHeevdXc=', cardId = '241231125223303ID1CARD7672031'\n\n    @staticmethod\n    def get_card_details_payload(admin_token,cardId):\n        print(Fore.RED + \"Card details are\" + Style.RESET_ALL)\n        url = f\"{BaseUrl.ADMIN_PORTAL}/issuance/v1/cards/{cardId}\"\n        headers = {\n            'Content-Type': 'application/json',\n            'Authorization': f'Bearer {admin_token}'\n        }\n        time.sleep(5)\n        response = requests.get(url, headers=headers)\n        print(response.status_code)\n    \n        if(response.status_code == 200):\n            # print(response.json())\n            return response\n        else:\n            print(response.text)\n            logging.error(response.text)\n>           assert False\nE           AssertionError\n\npages/helperPage/Card/GetCardDetailsPayload.py:33: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1735649537233,"stop":1735649537293,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"issuer_login_token","time":{"start":1735649537293,"stop":1735649537596,"duration":303},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"indianBankObject","time":{"start":1735649537596,"stop":1735649537596,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <TestCases.indianBank.test_indianBank_ECOM_POS_CL_min_kyc_txn_limit.TestIndianBankEcomMinKycLimit object at 0x1100c90d0>\nindianBankObject = <constant.indianBank.IndianBankConstant.IndianBankConstant object at 0x106856240>\nissuer_login_token = 'PjrGg43vFOYWRDJ1pvxaVtJW8cHw3spQCQLPHeevdXc='\n\n    def test_verify_pos_ecom_and_cl_txn_count(self,indianBankObject,issuer_login_token):\n>       PosEcomAndCLMinKyc.verifyPosEcomAndClTransactionCount(indianBankObject.PERSONAL_CARD_MOBILE_NO, issuer_login_token)\n\nTestCases/indianBank/test_indianBank_ECOM_POS_CL_min_kyc_txn_limit.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/kyclimit/indianBankKycLimit/PosEcomAndCLMinKyc.py:195: in verifyPosEcomAndClTransactionCount\n    DemoTxnPostMethod.demo_txn_post_method(mobile, 1, \"CL\", jwt_token, cardId)\npages/demoTxn/demoTxn.py:16: in demo_txn_post_method\n    prevTable = TransferMoneyPostMethod.checkBalance(cardId,jwt_token)\npages/impsTransfer/ImpsMoneyTransfer.py:73: in checkBalance\n    response = GetCardDetailsGetMethod.get_card_details_get_method(cardId, admin_login_token)\npages/helperPage/Card/GetCardDetails.py:11: in get_card_details_get_method\n    return GetCardDetailsPayload.get_card_details_payload(jwt_login_token, cardId)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nadmin_token = 'PjrGg43vFOYWRDJ1pvxaVtJW8cHw3spQCQLPHeevdXc=', cardId = '241231125223303ID1CARD7672031'\n\n    @staticmethod\n    def get_card_details_payload(admin_token,cardId):\n        print(Fore.RED + \"Card details are\" + Style.RESET_ALL)\n        url = f\"{BaseUrl.ADMIN_PORTAL}/issuance/v1/cards/{cardId}\"\n        headers = {\n            'Content-Type': 'application/json',\n            'Authorization': f'Bearer {admin_token}'\n        }\n        time.sleep(5)\n        response = requests.get(url, headers=headers)\n        print(response.status_code)\n    \n        if(response.status_code == 200):\n            # print(response.json())\n            return response\n        else:\n            print(response.text)\n            logging.error(response.text)\n>           assert False\nE           AssertionError\n\npages/helperPage/Card/GetCardDetailsPayload.py:33: AssertionError","steps":[],"attachments":[{"uid":"d97ffe4b6ea4cb42","name":"log","source":"d97ffe4b6ea4cb42.txt","type":"text/plain","size":523319}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"TestCases.indianBank"},{"name":"suite","value":"test_indianBank_ECOM_POS_CL_min_kyc_txn_limit"},{"name":"subSuite","value":"TestIndianBankEcomMinKycLimit"},{"name":"host","value":"shashi-kushwaha.local"},{"name":"thread","value":"598-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestCases.indianBank.test_indianBank_ECOM_POS_CL_min_kyc_txn_limit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b1287def15deac09.json","parameterValues":[]}